pipeline {
    
    agent none
    
    parameters {
        
        string(name: 'service_name', defaultValue: 'web', description: '填写服务名称 「 pom中的 artifactId 」')

        string(name: 'tag', defaultValue: 'dev', description: '版本')
        
        string(name: 'api_servers', defaultValue: '172.20.18.90:8000', description: '服务网关')

    }

    stages {
        
        stage('source build') {
            agent {
                node{
                    label "master"
                }
            }
             
            steps {
                git branch: 'master', credentialsId: 'GitHubAccess', url: 'git'
                sh 'yarn config set yarn-offline-mirror /opt/nodejs/npm-packages-offline-cache && yarn config set yarn-offline-mirror-pruning true'
                sh 'cp /usr/local/share/.yarnrc ./'
                sh 'yarn install -offline'
                sh 'yarn build'
                sh 'docker build -t registry.web:$tag .'
                sh 'docker push registry.web:$tag'
            }
        }

       stage('deploy'){
            agent {
                node{
                    label "node-16"
                    customWorkspace '/opt/****/web'
                }
            }
            steps {
sh '''
cat <<EOF> docker-compose.yml
version: '3.0'
services:
  ${service_name}:
    image: "registry****/${service_name}:${tag}"
    restart: always
    network_mode: "host"
    environment:
      - api_servers=server ${api_servers};
EOF
'''
                sh 'docker-compose down'
                sh 'docker-compose up -d '
            }
        }
    }
}
